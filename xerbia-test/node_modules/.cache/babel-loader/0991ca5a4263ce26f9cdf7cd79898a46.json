{"ast":null,"code":"var _jsxFileName = \"/home/flo/Documents/Practice*/React/Bibliotheque/xerbia-test/src/screens/ShoppingCart.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./scss/ShoppingCart.scss\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeFromCart } from \"../components/actions/CartActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"title\",\n  headerName: \"Titre\",\n  width: 350,\n  editable: true\n}, {\n  field: \"price\",\n  headerName: \"Prix\",\n  type: \"number\",\n  width: 70,\n  editable: true\n}];\n\nconst ShoppingCart = props => {\n  _s();\n\n  const [removedBook, setRemovedBooks] = useState([]);\n  const [totalPriceBeforeDiscount, setTotalPriceBeforeDiscount] = useState(0); // const [offers, setOffers] = useState([]);\n  //handle remove from cart\n\n  const handleDelete = () => {\n    props.dispatch(removeFromCart(removedBook));\n  }; //Loop through the state books to find the prices and the books id\n\n\n  const getBooksDetails = () => {\n    let total = 0;\n    let bookId = [];\n    props.Cart.map(book => {\n      total += book.price;\n      bookId.push(book.id);\n    });\n    setTotalPriceBeforeDiscount(total);\n    getBooksId(bookId);\n  }; //Stringify and concatenate the ids (isbn) and call the getDiscount method\n\n\n  const getBooksId = books => {\n    let book = books.join();\n\n    if (book) {\n      getDiscount(book);\n    }\n  }; //Call the commercial offers API\n\n\n  const getDiscount = selectedBooksId => {\n    let url = `https://henri-potier.techx.fr/books/${selectedBooksId}/commercialOffers`;\n    fetch(url).then(res => res.json()).then(result => {\n      console.log(\"TEST\");\n      return result.offers;\n    }).then(offer => calculateBestOffer(offer));\n  };\n\n  const calculateBestOffer = offers => {\n    console.log(\"TEST 2\", offers); // Calculate the final price with all of the 3 offers applied (under certain conditions)\n\n    let bestOffer = 0; //Percentage\n\n    if (offers.find(x => x.type === \"percentage\")) {\n      let percentageOffer = offers.find(x => x.type === \"percentage\");\n      bestOffer = totalPriceBeforeDiscount * (percentageOffer.value / 100);\n    } //Minus\n\n\n    if (offers.find(x => x.type === \"minus\")) {\n      let minusOffer = offers.find(x => x.type === \"minus\");\n\n      if (bestOffer != 0) {\n        let total = totalPriceBeforeDiscount - minusOffer;\n\n        if (total < bestOffer) {\n          bestOffer = total;\n        }\n      } else {\n        bestOffer = totalPriceBeforeDiscount - minusOffer;\n      }\n    } //Slice\n\n\n    if (offers.find(x => x.type === \"slice\")) {\n      let sliceOffer = offers.find(x => x.type === \"slice\");\n      console.log(\"yess\", sliceOffer);\n    }\n  };\n\n  useEffect(() => {\n    getBooksDetails();\n  }, [props.Cart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shoppingCart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shoppingCart__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shoppingCart__title\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Votre panier:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shoppingCart__grid\",\n        children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: props.Cart,\n          columns: columns,\n          pageSize: 5,\n          rowsPerPageOptions: [5],\n          checkboxSelection: true,\n          disableSelectionOnClick: true,\n          onSelectionModelChange: selected => setRemovedBooks(selected)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shoppingCart__right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shoppingCart__box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Nos offres commerciales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Sous-total: \", totalPriceBeforeDiscount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Passer la commande\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShoppingCart, \"uKh2DDFdqygpTfFUlJTmyr5QZuk=\");\n\n_c = ShoppingCart;\n\nconst mapStateToProps = state => {\n  return {\n    Cart: state.CartReducer\n  };\n};\n\nexport default connect(mapStateToProps)(ShoppingCart);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingCart\");","map":{"version":3,"sources":["/home/flo/Documents/Practice*/React/Bibliotheque/xerbia-test/src/screens/ShoppingCart.tsx"],"names":["DataGrid","Button","useEffect","useState","connect","removeFromCart","columns","field","headerName","width","editable","type","ShoppingCart","props","removedBook","setRemovedBooks","totalPriceBeforeDiscount","setTotalPriceBeforeDiscount","handleDelete","dispatch","getBooksDetails","total","bookId","Cart","map","book","price","push","id","getBooksId","books","join","getDiscount","selectedBooksId","url","fetch","then","res","json","result","console","log","offers","offer","calculateBestOffer","bestOffer","find","x","percentageOffer","value","minusOffer","sliceOffer","selected","mapStateToProps","state","CartReducer"],"mappings":"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","sourcesContent":["import \"./scss/ShoppingCart.scss\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeFromCart } from \"../components/actions/CartActions\";\n\nconst columns = [\n  {\n    field: \"title\",\n    headerName: \"Titre\",\n    width: 350,\n    editable: true,\n  },\n\n  {\n    field: \"price\",\n    headerName: \"Prix\",\n    type: \"number\",\n    width: 70,\n    editable: true,\n  },\n];\n\nconst ShoppingCart = (props: any) => {\n  const [removedBook, setRemovedBooks] = useState([]);\n  const [totalPriceBeforeDiscount, setTotalPriceBeforeDiscount] = useState(0);\n  // const [offers, setOffers] = useState([]);\n\n  //handle remove from cart\n  const handleDelete = () => {\n    props.dispatch(removeFromCart(removedBook));\n  };\n\n  //Loop through the state books to find the prices and the books id\n  const getBooksDetails = () => {\n    let total: number = 0;\n    let bookId: any = [];\n\n    props.Cart.map((book: any) => {\n      total += book.price;\n      bookId.push(book.id);\n    });\n\n    setTotalPriceBeforeDiscount(total);\n    getBooksId(bookId);\n  };\n\n  //Stringify and concatenate the ids (isbn) and call the getDiscount method\n  const getBooksId = (books: []) => {\n    let book = books.join();\n    if (book) {\n      getDiscount(book);\n    }\n  };\n\n  //Call the commercial offers API\n  const getDiscount = (selectedBooksId: string) => {\n    let url = `https://henri-potier.techx.fr/books/${selectedBooksId}/commercialOffers`;\n\n    fetch(url)\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(\"TEST\");\n        return result.offers;\n      })\n      .then((offer: any) => calculateBestOffer(offer));\n  };\n\n  const calculateBestOffer = (offers: any) => {\n    console.log(\"TEST 2\", offers);\n    // Calculate the final price with all of the 3 offers applied (under certain conditions)\n    let bestOffer = 0;\n\n    //Percentage\n    if (offers.find((x: any) => x.type === \"percentage\")) {\n      let percentageOffer = offers.find((x: any) => x.type === \"percentage\");\n      bestOffer = totalPriceBeforeDiscount * (percentageOffer.value / 100);\n    }\n\n    //Minus\n    if (offers.find((x: any) => x.type === \"minus\")) {\n      let minusOffer = offers.find((x: any) => x.type === \"minus\");\n      if (bestOffer != 0) {\n        let total = totalPriceBeforeDiscount - minusOffer;\n\n        if (total < bestOffer) {\n          bestOffer = total;\n        }\n      } else {\n        bestOffer = totalPriceBeforeDiscount - minusOffer;\n      }\n    }\n\n    //Slice\n    if (offers.find((x: any) => x.type === \"slice\")) {\n      let sliceOffer = offers.find((x: any) => x.type === \"slice\");\n      console.log(\"yess\", sliceOffer);\n    }\n  };\n\n  useEffect(() => {\n    getBooksDetails();\n  }, [props.Cart]);\n\n  return (\n    <div className=\"shoppingCart\">\n      <div className=\"shoppingCart__left\">\n        <div className=\"shoppingCart__title\">\n          <h3>Votre panier:</h3>\n        </div>\n\n        <div className=\"shoppingCart__grid\">\n          <DataGrid\n            rows={props.Cart}\n            columns={columns}\n            pageSize={5}\n            rowsPerPageOptions={[5]}\n            checkboxSelection\n            disableSelectionOnClick\n            onSelectionModelChange={(selected: any) =>\n              setRemovedBooks(selected)\n            }\n          />\n          <Button onClick={handleDelete}>Delete</Button>\n        </div>\n      </div>\n      <div className=\"shoppingCart__right\">\n        <div className=\"shoppingCart__box\">\n          <h3>Nos offres commerciales</h3>\n\n          <h3>Sous-total: {totalPriceBeforeDiscount}</h3>\n          <Button variant=\"contained\">Passer la commande</Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    Cart: state.CartReducer,\n  };\n};\n\nexport default connect(mapStateToProps)(ShoppingCart);\n"]},"metadata":{},"sourceType":"module"}