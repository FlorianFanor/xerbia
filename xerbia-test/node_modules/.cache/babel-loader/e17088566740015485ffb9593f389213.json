{"ast":null,"code":"import * as actions from \"../actions/Types\";\n\nconst CartReducer = (state = {}, action) => {\n  switch (action.type) {\n    case actions.ADD_TO_CART:\n      console.log(\"Hello\", state, action);\n      return action.payload;\n\n    case actions.REMOVE_FROM_CART:\n      if (state.isbn.findIndex(item => item === action.payload) !== -1) {\n        state.isbn = state.isbn.filter(isbn => isbn !== action.payload);\n        return state;\n      }\n\n      state.isbn = [...state.isbn, action.payload];\n      return state;\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["/home/flo/Documents/Practice*/React/Bibliotheque/xerbia-test/src/components/reducers/CartReducer.tsx"],"names":["actions","CartReducer","state","action","type","ADD_TO_CART","console","log","payload","REMOVE_FROM_CART","isbn","findIndex","item","filter"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,kBAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAU,GAAG,EAAd,EAAkBC,MAAlB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,OAAO,CAACK,WAAb;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB,EAA4BC,MAA5B;AACA,aAAOA,MAAM,CAACK,OAAd;;AAEF,SAAKR,OAAO,CAACS,gBAAb;AACE,UAAIP,KAAK,CAACQ,IAAN,CAAWC,SAAX,CAAsBC,IAAD,IAAeA,IAAI,KAAKT,MAAM,CAACK,OAApD,MAAiE,CAAC,CAAtE,EAAyE;AACvEN,QAAAA,KAAK,CAACQ,IAAN,GAAaR,KAAK,CAACQ,IAAN,CAAWG,MAAX,CAAmBH,IAAD,IAAeA,IAAI,KAAKP,MAAM,CAACK,OAAjD,CAAb;AACA,eAAON,KAAP;AACD;;AACDA,MAAAA,KAAK,CAACQ,IAAN,GAAa,CAAC,GAAGR,KAAK,CAACQ,IAAV,EAAgBP,MAAM,CAACK,OAAvB,CAAb;AACA,aAAON,KAAP;;AAEF;AACE,aAAOA,KAAP;AAdJ;;AAiBA,SAAOA,KAAP;AACD,CAnBD;;KAAMD,W;AAoBN,eAAeA,WAAf","sourcesContent":["import * as actions from \"../actions/Types\";\n\nconst CartReducer = (state: any = {}, action: any) => {\n  switch (action.type) {\n    case actions.ADD_TO_CART:\n      console.log(\"Hello\", state, action);\n      return action.payload;\n\n    case actions.REMOVE_FROM_CART:\n      if (state.isbn.findIndex((item: any) => item === action.payload) !== -1) {\n        state.isbn = state.isbn.filter((isbn: any) => isbn !== action.payload);\n        return state;\n      }\n      state.isbn = [...state.isbn, action.payload];\n      return state;\n\n    default:\n      return state;\n  }\n\n  return state;\n};\nexport default CartReducer;\n"]},"metadata":{},"sourceType":"module"}