{"ast":null,"code":"import * as actions from \"../actions/Types\";\n\nconst CartReducer = (state = [], action) => {\n  switch (action.type) {\n    case actions.ADD_TO_CART:\n      let x = action.payload;\n      console.log(\"ee\", x);\n      x.map(row => {\n        console.log(\"row\", row); // const { isbn, ...rest } = x;\n        // let y = { id: isbn, ...rest };\n      });\n      state = [...state, x];\n      console.log(\"DDD\", state);\n      return state;\n\n    case actions.REMOVE_FROM_CART:\n      if (state.isbn.findIndex(item => item === action.payload) !== -1) {\n        state.isbn = state.isbn.filter(isbn => isbn !== action.payload);\n        return state;\n      }\n\n      state.isbn = [...state.isbn, action.payload];\n      return state;\n\n    default:\n      console.log(\"default\", state);\n      return state;\n  }\n};\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["/home/flo/Documents/Practice*/React/Bibliotheque/xerbia-test/src/components/reducers/CartReducer.tsx"],"names":["actions","CartReducer","state","action","type","ADD_TO_CART","x","payload","console","log","map","row","REMOVE_FROM_CART","isbn","findIndex","item","filter"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,kBAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAU,GAAG,EAAd,EAAkBC,MAAlB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,OAAO,CAACK,WAAb;AACE,UAAIC,CAAC,GAAGH,MAAM,CAACI,OAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBH,CAAlB;AACAA,MAAAA,CAAC,CAACI,GAAF,CAAOC,GAAD,IAAc;AAClBH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBE,GAAnB,EADkB,CAElB;AACA;AACD,OAJD;AAMAT,MAAAA,KAAK,GAAG,CAAC,GAAGA,KAAJ,EAAWI,CAAX,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,KAAnB;AACA,aAAOA,KAAP;;AAEF,SAAKF,OAAO,CAACY,gBAAb;AACE,UAAIV,KAAK,CAACW,IAAN,CAAWC,SAAX,CAAsBC,IAAD,IAAeA,IAAI,KAAKZ,MAAM,CAACI,OAApD,MAAiE,CAAC,CAAtE,EAAyE;AACvEL,QAAAA,KAAK,CAACW,IAAN,GAAaX,KAAK,CAACW,IAAN,CAAWG,MAAX,CAAmBH,IAAD,IAAeA,IAAI,KAAKV,MAAM,CAACI,OAAjD,CAAb;AACA,eAAOL,KAAP;AACD;;AACDA,MAAAA,KAAK,CAACW,IAAN,GAAa,CAAC,GAAGX,KAAK,CAACW,IAAV,EAAgBV,MAAM,CAACI,OAAvB,CAAb;AACA,aAAOL,KAAP;;AAEF;AACEM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,KAAvB;AACA,aAAOA,KAAP;AAxBJ;AA0BD,CA3BD;;KAAMD,W;AA6BN,eAAeA,WAAf","sourcesContent":["import * as actions from \"../actions/Types\";\n\nconst CartReducer = (state: any = [], action: any) => {\n  switch (action.type) {\n    case actions.ADD_TO_CART:\n      let x = action.payload;\n      console.log(\"ee\", x);\n      x.map((row: any) => {\n        console.log(\"row\", row);\n        // const { isbn, ...rest } = x;\n        // let y = { id: isbn, ...rest };\n      });\n\n      state = [...state, x];\n      console.log(\"DDD\", state);\n      return state;\n\n    case actions.REMOVE_FROM_CART:\n      if (state.isbn.findIndex((item: any) => item === action.payload) !== -1) {\n        state.isbn = state.isbn.filter((isbn: any) => isbn !== action.payload);\n        return state;\n      }\n      state.isbn = [...state.isbn, action.payload];\n      return state;\n\n    default:\n      console.log(\"default\", state);\n      return state;\n  }\n};\n\nexport default CartReducer;\n"]},"metadata":{},"sourceType":"module"}