{"ast":null,"code":"import * as actions from \"../actions/Types\";\n\nconst CartReducer = (state = [], action) => {\n  switch (action.type) {\n    case actions.ADD_TO_CART:\n      state = [...state, action.payload];\n      let parsedState = state.map(row => {\n        const {\n          isbn,\n          ...rest\n        } = row;\n        return {\n          id: isbn,\n          ...rest\n        };\n      });\n      return parsedState;\n\n    case actions.REMOVE_FROM_CART:\n      console.log(\"Hit removed\", action);\n\n      if (state.isbn.findIndex(item => item === action.payload) !== -1) {\n        state.isbn = state.isbn.filter(isbn => isbn !== action.payload);\n        return state;\n      }\n\n      state.isbn = [...state.isbn, action.payload];\n      return state;\n\n    default:\n      console.log(\"default\", state);\n      return state;\n  }\n};\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["/home/flo/Documents/Practice*/React/Bibliotheque/xerbia-test/src/components/reducers/CartReducer.tsx"],"names":["actions","CartReducer","state","action","type","ADD_TO_CART","payload","parsedState","map","row","isbn","rest","id","REMOVE_FROM_CART","console","log","findIndex","item","filter"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,kBAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAU,GAAG,EAAd,EAAkBC,MAAlB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,OAAO,CAACK,WAAb;AACEH,MAAAA,KAAK,GAAG,CAAC,GAAGA,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAR;AAEA,UAAIC,WAAW,GAAGL,KAAK,CAACM,GAAN,CAAWC,GAAD,IAAc;AACxC,cAAM;AAAEC,UAAAA,IAAF;AAAQ,aAAGC;AAAX,YAAoBF,GAA1B;AACA,eAAO;AAAEG,UAAAA,EAAE,EAAEF,IAAN;AAAY,aAAGC;AAAf,SAAP;AACD,OAHiB,CAAlB;AAKA,aAAOJ,WAAP;;AAEF,SAAKP,OAAO,CAACa,gBAAb;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BZ,MAA3B;;AACA,UAAID,KAAK,CAACQ,IAAN,CAAWM,SAAX,CAAsBC,IAAD,IAAeA,IAAI,KAAKd,MAAM,CAACG,OAApD,MAAiE,CAAC,CAAtE,EAAyE;AACvEJ,QAAAA,KAAK,CAACQ,IAAN,GAAaR,KAAK,CAACQ,IAAN,CAAWQ,MAAX,CAAmBR,IAAD,IAAeA,IAAI,KAAKP,MAAM,CAACG,OAAjD,CAAb;AACA,eAAOJ,KAAP;AACD;;AACDA,MAAAA,KAAK,CAACQ,IAAN,GAAa,CAAC,GAAGR,KAAK,CAACQ,IAAV,EAAgBP,MAAM,CAACG,OAAvB,CAAb;AACA,aAAOJ,KAAP;;AAEF;AACEY,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBb,KAAvB;AACA,aAAOA,KAAP;AAtBJ;AAwBD,CAzBD;;KAAMD,W;AA2BN,eAAeA,WAAf","sourcesContent":["import * as actions from \"../actions/Types\";\n\nconst CartReducer = (state: any = [], action: any) => {\n  switch (action.type) {\n    case actions.ADD_TO_CART:\n      state = [...state, action.payload];\n\n      let parsedState = state.map((row: any) => {\n        const { isbn, ...rest } = row;\n        return { id: isbn, ...rest };\n      });\n\n      return parsedState;\n\n    case actions.REMOVE_FROM_CART:\n      console.log(\"Hit removed\", action);\n      if (state.isbn.findIndex((item: any) => item === action.payload) !== -1) {\n        state.isbn = state.isbn.filter((isbn: any) => isbn !== action.payload);\n        return state;\n      }\n      state.isbn = [...state.isbn, action.payload];\n      return state;\n\n    default:\n      console.log(\"default\", state);\n      return state;\n  }\n};\n\nexport default CartReducer;\n"]},"metadata":{},"sourceType":"module"}