{"ast":null,"code":"var _jsxFileName = \"/home/flo/Documents/Practice*/React/Bibliotheque/xerbia-test/src/screens/MainPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./MainPage.scss\";\nimport { IconButton, TextField } from \"@mui/material\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport LibraryCard from \"../components/LibraryCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainPage = () => {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  useEffect(() => {}, []);\n\n  const getBooks = async searchId => {\n    fetch(\"https://henri-potier.techx.fr/books\").then(res => res.json()).then(result => {\n      if (searchId === result.cover) {\n        setBooks(result);\n      } else {\n        setBooks(result);\n      }\n    });\n  };\n\n  const filterSearch = inputText => {\n    // setSearchText(inputText);\n    const newData = books.filter(item => {\n      const itemData = `${item.cover.toUpperCase()}`;\n      const textData = inputText.toUpperCase(); // setSortType(\"\");\n\n      if (inputText === \"\") {\n        return getBooks();\n      }\n\n      return itemData.indexOf(textData) > -1;\n    });\n    setBooks(newData);\n  }; // End FilterSearch\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainPage search\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        error: false,\n        id: \"outlined-error\",\n        label: \"Recherche\",\n        defaultValue: \"Henri Potier \\xE0 l'\\xE9cole des sorciers. . .\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterBtn\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardContainer\",\n      children: books.map(book => /*#__PURE__*/_jsxDEV(LibraryCard, {\n        id: book.isbn,\n        title: book.title,\n        description: book.synopsis,\n        cover: book.cover,\n        price: book.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/home/flo/Documents/Practice*/React/Bibliotheque/xerbia-test/src/screens/MainPage.tsx"],"names":["React","useEffect","useState","IconButton","TextField","FilterListIcon","LibraryCard","MainPage","books","setBooks","getBooks","searchId","fetch","then","res","json","result","cover","filterSearch","inputText","newData","filter","item","itemData","toUpperCase","textData","indexOf","map","book","isbn","title","synopsis","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,iBAAP;AACA,SAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,eAA9C;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAUA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;;AAEA,QAAMS,QAAQ,GAAG,MAAOC,QAAP,IAA4B;AAC3CC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,MAAD,IAAY;AAChB,UAAIL,QAAQ,KAAKK,MAAM,CAACC,KAAxB,EAA+B;AAC7BR,QAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,OAFD,MAEO;AACLP,QAAAA,QAAQ,CAACO,MAAD,CAAR;AACD;AACF,KARH;AASD,GAVD;;AAYA,QAAME,YAAY,GAAIC,SAAD,IAAuB;AAC1C;AAEA,UAAMC,OAAO,GAAGZ,KAAK,CAACa,MAAN,CAAcC,IAAD,IAAgB;AAC3C,YAAMC,QAAQ,GAAI,GAAED,IAAI,CAACL,KAAL,CAAWO,WAAX,EAAyB,EAA7C;AAEA,YAAMC,QAAQ,GAAGN,SAAS,CAACK,WAAV,EAAjB,CAH2C,CAK3C;;AAEA,UAAIL,SAAS,KAAK,EAAlB,EAAsB;AACpB,eAAOT,QAAQ,EAAf;AACD;;AAED,aAAOa,QAAQ,CAACG,OAAT,CAAiBD,QAAjB,IAA6B,CAAC,CAArC;AACD,KAZe,CAAhB;AAcAhB,IAAAA,QAAQ,CAACW,OAAD,CAAR;AACD,GAlBD,CAjBqB,CAmClB;;;AAEH,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE,KADT;AAEE,QAAA,EAAE,EAAC,gBAFL;AAGE,QAAA,KAAK,EAAC,WAHR;AAIE,QAAA,YAAY,EAAC,gDAJf;AAKE,QAAA,SAAS;AALX;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,UAAD;AAAA,iCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGZ,KAAK,CAACmB,GAAN,CAAWC,IAAD,iBACT,QAAC,WAAD;AACE,QAAA,EAAE,EAAEA,IAAI,CAACC,IADX;AAEE,QAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,QAAA,WAAW,EAAEF,IAAI,CAACG,QAHpB;AAIE,QAAA,KAAK,EAAEH,IAAI,CAACX,KAJd;AAKE,QAAA,KAAK,EAAEW,IAAI,CAACI;AALd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAnED;;GAAMzB,Q;;KAAAA,Q;AAqEN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./MainPage.scss\";\nimport { Button, IconButton, TextField } from \"@mui/material\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport LibraryCard from \"../components/LibraryCard\";\n\ntype Book = {\n  isbn: string;\n  title: string;\n  price: number;\n  cover: string;\n  synopsis: string;\n};\n\nconst MainPage = () => {\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {}, []);\n\n  const getBooks = async (searchId: string) => {\n    fetch(\"https://henri-potier.techx.fr/books\")\n      .then((res) => res.json())\n      .then((result) => {\n        if (searchId === result.cover) {\n          setBooks(result);\n        } else {\n          setBooks(result);\n        }\n      });\n  };\n\n  const filterSearch = (inputText: string) => {\n    // setSearchText(inputText);\n\n    const newData = books.filter((item: Book) => {\n      const itemData = `${item.cover.toUpperCase()}`;\n\n      const textData = inputText.toUpperCase();\n\n      // setSortType(\"\");\n\n      if (inputText === \"\") {\n        return getBooks();\n      }\n\n      return itemData.indexOf(textData) > -1;\n    });\n\n    setBooks(newData);\n  }; // End FilterSearch\n\n  return (\n    <div className=\"mainPage\">\n      <div className=\"mainPage search\">\n        <TextField\n          error={false}\n          id=\"outlined-error\"\n          label=\"Recherche\"\n          defaultValue=\"Henri Potier à l'école des sorciers. . .\"\n          fullWidth\n        />\n        <div className=\"filterBtn\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </div>\n      </div>\n\n      <div className=\"cardContainer\">\n        {books.map((book: Book) => (\n          <LibraryCard\n            id={book.isbn}\n            title={book.title}\n            description={book.synopsis}\n            cover={book.cover}\n            price={book.price}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}